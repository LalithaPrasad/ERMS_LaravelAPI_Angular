{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/empdata-resolve.service.ts","webpack:///src/app/token.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","loadChildren","m","AdminModule","EmployeeModule","redirectTo","pathMatch","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","EmpDataResolveService","httpclient","router","tokenservice","error","errorMessage","ErrorEvent","message","status","alert","get","navigateByUrl","url","headers","set","pipe","dataFromApi","handleError","providedIn","TokenService","token","environment","production","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n    {path:'admin', loadChildren:()=>import(`./admin/admin.module`).then(m=>m.AdminModule)},\n    {path:'employee', loadChildren:()=>import(`./employee/employee.module`).then(m=>m.EmployeeModule)},\n    {path:'', redirectTo:'admin', pathMatch:'full'}\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-app';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { TokenService } from './token.service';\nimport { EmpDataResolveService } from './empdata-resolve.service';\n\n@NgModule({\n    declarations: [AppComponent],\n    imports: [BrowserModule, AppRoutingModule, HttpClientModule],\n    providers: [TokenService, EmpDataResolveService],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Router, Resolve } from '@angular/router';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { TokenService } from './token.service'\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class EmpDataResolveService implements Resolve<any> {\n\n    constructor(\n        private httpclient:HttpClient,\n        private router:Router,\n        private tokenservice:TokenService\n    ) { }\n    handleError(error:HttpErrorResponse){\n        let errorMessage='Unknown error';\n        if(error.error instanceof ErrorEvent){\n            errorMessage=`Error:${error.error.message}`;\n        }\n        else{\n            errorMessage=`Error code:${error.status}\\nMessage:${error.message}`;\n        }\n        alert(errorMessage);\n        return throwError(errorMessage);\n    }\n    resolve(): Observable<any> {\n        if(this.tokenservice.get()=='undefined'){\n            alert('Invalid user');\n            this.router.navigateByUrl('/admin');\n        }\n        else{\n            let url='http://localhost:8000/api/employee/display';\n            let headers=new HttpHeaders().set('Content-type','application/json').set('token',this.tokenservice.get());\n            return this.httpclient.get(url,{headers:headers}).pipe(\n                map((dataFromApi)=>dataFromApi),\n                catchError(this.handleError));\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TokenService {\n    private token:string='undefined';\n    \n    constructor() { }\n    set(token:string):void {\n        this.token=token;\n    }\n    get():string {\n        return this.token;\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}