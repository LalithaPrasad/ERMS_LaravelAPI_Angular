{"version":3,"sources":["webpack:///src/app/employee/add/add.component.ts","webpack:///src/app/employee/add/add.component.html","webpack:///src/app/employee/delete/delete.component.ts","webpack:///src/app/employee/delete/delete.component.html","webpack:///src/app/employee/employee-routing.module.ts","webpack:///src/app/employee/employee.module.ts","webpack:///src/app/employee/modify/modify.component.ts","webpack:///src/app/employee/modify/modify.component.html","webpack:///src/app/employee/show/show.component.ts","webpack:///src/app/employee/show/show.component.html"],"names":["AddComponent","httpclient","router","tokenservice","get","alert","navigateByUrl","data","name","age","ed","role","opts","headers","url","post","subscribe","response","console","log","addemp","selector","templateUrl","styleUrls","DeleteComponent","params","set","id","deleteemp","routes","path","component","resolve","empData","EmployeeRoutingModule","forChild","imports","exports","EmployeeModule","declarations","ModifyComponent","put","modifyemp","ShowComponent","route","snapshot","message","employees"],"mappings":"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","file":"employee-employee-module-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { TokenService } from '../../token.service';\n\n@Component({\n    selector: 'app-employee-add',\n    templateUrl: './add.component.html',\n    styleUrls: ['./add.component.css']\n})\nexport class AddComponent implements OnInit {\n    name:string;\n    age:number;\n    ed:string;\n    role:string;\n\n    constructor(\n        private httpclient:HttpClient,\n        private router:Router,\n        private tokenservice:TokenService\n    ) { }\n    \n    ngOnInit(): void { }\n\n    addemp(){\n        if(this.tokenservice.get()=='undefined'){\n            alert('Invalid user');\n            this.router.navigateByUrl('/admin');\n        }\n        else{\n            const data={'name':this.name, 'age':this.age, 'ed':this.ed, 'role':this.role};\n            const opts={headers:new HttpHeaders(\n                {'Content-type':'application/json','token':this.tokenservice.get()})};\n            const url='http://localhost:8000/api/employee/add';\n            this.httpclient.post(url,data,opts).subscribe(response=>{\n                console.log(response['message']);\n                if(response['message']=='EmployeeAdded'){\n                    alert('Employee added');\n                    this.router.navigateByUrl('/admin/menu');\n                }\n                else{\n                    alert('Invalid user');\n                    this.router.navigateByUrl('/admin/login');\n                }\n            });\n        }\n    }\n}\n","<fieldset>\n    <legend>Add Employee</legend>\n    <form #addEmployeeForm='ngForm' (ngSubmit)='addemp()'>\n        <p><input type='text' [(ngModel)]='name' name='name'\n                  placeholder='Enter employee name' autofocus /></p>\n        <p><input type='number' [(ngModel)]='age' name='age'\n                  placeholder='Enter employee age' /></p>\n        <p><input type='text' [(ngModel)]='ed' name='ed'\n                  placeholder='Enter employee education' /></p>\n        <p><input type='text' [(ngModel)]='role' name='role'\n                  placeholder='Enter employee role' /></p>\n        <p><input type='submit' value='Add' /></p>\n    </form>\n</fieldset>\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { TokenService } from '../../token.service';\n\n@Component({\n    selector: 'app-employee-delete',\n    templateUrl: './delete.component.html',\n    styleUrls: ['./delete.component.css']\n})\nexport class DeleteComponent implements OnInit {\n\n    id:string;\n\n    constructor(\n        private httpclient:HttpClient,\n        private tokenservice:TokenService,\n        private router:Router\n    ) { }\n    ngOnInit(): void { }\n    deleteemp(){\n        if(this.tokenservice.get()=='undefined'){\n            alert('Invalid user');\n            this.router.navigateByUrl('/admin');\n        }\n        else{\n            const url='http://localhost:8000/api/employee/delete';\n            const params=new HttpParams().set('id',this.id);\n            const headers=new HttpHeaders(\n                {'Content-type':'application/json', 'token':this.tokenservice.get()});\n            this.httpclient.delete(url,{params:params,headers:headers}).subscribe(response=>{\n                if(response['message']=='EmployeeDeleted'){\n                    alert('Employee deleted');\n                    this.router.navigateByUrl('/admin/menu');\n                }\n                else{\n                    alert(response['message']);\n                    this.router.navigateByUrl('/admin');\n                }\n            });\n        }\n    }\n}\n","<fieldset>\n    <legend>Delete Employee</legend>\n    <form #deleteEmployeeForm='ngForm' (ngSubmit)='deleteemp()'>\n        <p><input type='number' [(ngModel)]='id' name='id'\n                  placeholder='Enter employee id' autofocus /></p>\n        <p><input type='submit' value='Delete' /></p>\n    </form>\n</fieldset>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AddComponent } from './add/add.component';\nimport { DeleteComponent } from './delete/delete.component';\nimport { ModifyComponent } from './modify/modify.component';\nimport { ShowComponent } from './show/show.component';\n\nimport { EmpDataResolveService } from '../empdata-resolve.service';\n\nconst routes:Routes=[\n    {path:'add', component:AddComponent},\n    {path:'delete', component:DeleteComponent},\n    {path:'modify', component:ModifyComponent},\n    {path:'show', component:ShowComponent, resolve:{empData:EmpDataResolveService}}\n];\n\n@NgModule({\n    imports:[RouterModule.forChild(routes)],\n    exports:[RouterModule]\n})\n\nexport class EmployeeRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { EmployeeRoutingModule } from './employee-routing.module';\n\nimport { AddComponent } from './add/add.component';\nimport { DeleteComponent } from './delete/delete.component';\nimport { ModifyComponent } from './modify/modify.component';\nimport { ShowComponent } from './show/show.component';\n\n@NgModule({\n    declarations: [AddComponent, DeleteComponent, ModifyComponent, ShowComponent],\n    imports: [CommonModule, EmployeeRoutingModule, FormsModule, HttpClientModule],\n    exports: [AddComponent, DeleteComponent, ModifyComponent, ShowComponent]\n})\nexport class EmployeeModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { TokenService } from '../../token.service';\n\n@Component({\n    selector: 'app-employee-modify',\n    templateUrl: './modify.component.html',\n    styleUrls: ['./modify.component.css']\n})\nexport class ModifyComponent implements OnInit {\n\n    id:string;\n    ed:string;\n    role:string;\n\n    constructor(\n        private httpclient:HttpClient,\n        private router:Router,\n        private tokenservice:TokenService\n    ) { }\n    ngOnInit(): void { }\n    modifyemp(){\n        if(this.tokenservice.get()=='undefined'){\n            alert('Invalid user');\n            this.router.navigateByUrl('/admin');\n        }\n        else{\n            const url='http://localhost:8000/api/employee/modify';\n            const data={'id':this.id,'ed':this.ed,'role':this.role};\n            const headers=new HttpHeaders(\n                {'Content-type':'application/json','token':this.tokenservice.get()});\n            this.httpclient.put(url,data,{headers:headers}).subscribe(response=>{\n                if(response['message']=='EmployeeModified'){\n                    alert('Employee modified');\n                    this.router.navigateByUrl('/admin/menu');\n                }\n                else{\n                    alert(response['message']);\n                    this.router.navigateByUrl('/admin');\n                }\n            });\n        }\n    }\n}\n","<fieldset>\n    <legend>Modify Employee</legend>\n    <form #modifyEmployeeForm='ngForm' (ngSubmit)='modifyemp()'>\n        <p><input type='number' [(ngModel)]='id' name='id'\n                  placeholder='Enter employee id' /></p>\n        <p><input type='text' [(ngModel)]='ed' name='ed'\n                  placeholder='Enter new education' /></p>\n        <p><input type='text' [(ngModel)]='role' name='role'\n                  placeholder='Enter new role' /></p>\n        <p><input type='submit' value='Modify' /></p>\n    </form>\n</fieldset>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router'\nimport { TokenService } from '../../token.service';\n\n@Component({\n    selector: 'app-employee-show',\n    templateUrl: './show.component.html',\n    styleUrls: ['./show.component.css']\n})\nexport class ShowComponent implements OnInit {\n\n    employees:any;\n    response:any;\n\n    constructor(private route:ActivatedRoute){ }\n    ngOnInit(): void {\n        this.response=this.route.snapshot.data['empData'];\n        if(this.response.message=='NotEmpty'){\n            this.employees=this.response.employees;\n        }\n        else{\n            this.employees=null;\n        }\n    }\n}\n","<fieldset>\n    <legend>Display Employees</legend>\n    <div *ngIf='employees && employees.length>0; else empty'>\n        <table>\n            <tr>\n                <th>Id</th><th>Name</th>\n                <th>Age</th><th>Education</th>\n                <th>Role</th>\n            </tr>\n            <tr *ngFor='let emp of employees'>\n                <td>{{emp.id}}</td><td>{{emp.name}}</td>\n                <td>{{emp.age}}</td><td>{{emp.ed}}</td>\n                <td>{{emp.role}}</td>\n            </tr>\n        </table>\n    </div>\n    <ng-template #empty>\n        <p>Employee database is empty</p>\n    </ng-template>\n</fieldset>\n<p><a [routerLink]=\"['/admin/menu']\">Go back to menu</a></p>\n"]}