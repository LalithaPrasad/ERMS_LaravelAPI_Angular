{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/empdata-resolve.service.ts","./src/app/token.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [\n    {path:'admin', loadChildren:()=>import(`./admin/admin.module`).then(m=>m.AdminModule)},\n    {path:'employee', loadChildren:()=>import(`./employee/employee.module`).then(m=>m.EmployeeModule)},\n    {path:'', redirectTo:'admin', pathMatch:'full'}\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-app';\n}\n","<router-outlet></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { TokenService } from './token.service';\nimport { EmpDataResolveService } from './empdata-resolve.service';\n\n@NgModule({\n    declarations: [AppComponent],\n    imports: [BrowserModule, AppRoutingModule, HttpClientModule],\n    providers: [TokenService, EmpDataResolveService],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Router, Resolve } from '@angular/router';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { TokenService } from './token.service'\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class EmpDataResolveService implements Resolve<any> {\n\n    constructor(\n        private httpclient:HttpClient,\n        private router:Router,\n        private tokenservice:TokenService\n    ) { }\n    handleError(error:HttpErrorResponse){\n        let errorMessage='Unknown error';\n        if(error.error instanceof ErrorEvent){\n            errorMessage=`Error:${error.error.message}`;\n        }\n        else{\n            errorMessage=`Error code:${error.status}\\nMessage:${error.message}`;\n        }\n        alert(errorMessage);\n        return throwError(errorMessage);\n    }\n    resolve(): Observable<any> {\n        if(this.tokenservice.get()=='undefined'){\n            alert('Invalid user');\n            this.router.navigateByUrl('/admin');\n        }\n        else{\n            let url='http://localhost:8000/api/employee/display';\n            let headers=new HttpHeaders().set('Content-type','application/json').set('token',this.tokenservice.get());\n            return this.httpclient.get(url,{headers:headers}).pipe(\n                map((dataFromApi)=>dataFromApi),\n                catchError(this.handleError));\n        }\n    }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class TokenService {\n    private token:string='undefined';\n    \n    constructor() { }\n    set(token:string):void {\n        this.token=token;\n    }\n    get():string {\n        return this.token;\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}